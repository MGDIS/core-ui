/**
 * Used to define width input
 * Kept it nested for coming widths
 */

$width-2: 5rem;
$width-16: 21rem;

.mg-c-input {
  // default width
  &:not(.mg-c-input--label-on-top) .mg-c-input__box {
    width: 100%;
    min-width: $width-2;
    max-width: calc(17.7rem + var(--mg-inputs-spacer) * 2); // keep native width + mg-input spacer
  }

  &.mg-c-input--width-full {
    &:not(.mg-c-input--label-on-top) {
      justify-content: space-between;
    }

    &.mg-c-input--label-on-top .mg-c-input__box {
      width: 100%;
    }

    .mg-c-input__input-container {
      width: 100%;
      flex: auto;

      .mg-c-input__box {
        max-width: 100%;
      }
    }
  }

  &.mg-c-input--width-16 .mg-c-input__input-container {
    width: 100%;

    .mg-c-input__input {
      width: 100%;
      max-width: $width-16;
    }

    .mg-c-input__with-character-left {
      width: 100%;
    }

    .mg-c-input__box {
      min-width: 100%;
      max-width: $width-16;
    }
  }

  &.mg-c-input--width-4 .mg-c-input__input-container .mg-c-input__box {
    max-width: 7rem;
  }

  &.mg-c-input--width-2 .mg-c-input__input-container .mg-c-input__box {
    max-width: $width-2;
  }
}
