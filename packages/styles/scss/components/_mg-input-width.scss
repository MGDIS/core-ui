/**
 * Used to define width input
 * Kept it nested for coming widths
 */

@mixin input-box-max-width {
  &.mg-c-input--width-2 {
    .mg-c-input__box,
    .mg-c-input__with-character-left {
      max-width: var(--mg-b-size-6w);
    }
  }

  &.mg-c-input--width-4 {
    .mg-c-input__box,
    .mg-c-input__with-character-left {
      max-width: var(--mg-b-size-9w);
    }
  }

  &.mg-c-input--width-16 {
    .mg-c-input__box,
    .mg-c-input__with-character-left {
      max-width: calc(26 * var(--mg-b-size-w));
    }
  }

  &.mg-c-input--width-full .mg-c-input__box {
    width: 100%;
    max-width: 100%;
  }
}

.mg-c-input {
  &__input-container {
    width: 100%;
    flex: 1 auto;
  }

  /**
  * Variations
  */

  @include input-box-max-width;

  &.mg-c-input--label-on-top {
    @include input-box-max-width;

    .mg-c-input__box {
      width: auto;
    }
  }

  &.mg-c-input--width-full:not(.mg-c-input--label-on-top) {
    justify-content: stretch;
  }

  &.mg-c-input--is-input-group-append,
  &.mg-c-input--is-append-input-slot-content {
    ::slotted([slot='append-input']) {
      width: auto;
    }
  }
}

/**
* Slots
*/

:host(.mg-c-input.mg-c-input--width-full) ::slotted(*:not(mg-input-title)) {
  width: 100%;
  max-width: 100%;
}
