@import 'mixins/reset-mg-card-slotted-variables';

@mixin card-variants($variants...) {
  @each $variant in $variants {
    &.mg-c-card--#{$variant} {
      $custom-property-color-h: --mg-b-color-#{$variant}-h;
      $custom-property-color-s: --mg-b-color-#{$variant}-s;

      overflow: hidden;

      &.mg-c-card--bar-left .mg-c-card__bar {
        $custom-property-color-l: --mg-b-color-#{$variant}-l;
        $background-color-value: hsl(var($custom-property-color-h), var($custom-property-color-s), var($custom-property-color-l));

        background-color: $background-color-value;
      }

      &.mg-c-card--fill {
        $background-color-value: hsl(var($custom-property-color-h), var($custom-property-color-s), var(--mg-b-color-soft-l));

        background-color: $background-color-value;
      }
    }
  }
}

.mg-c-card {
  position: relative;
  z-index: inherit;
  overflow: var(--mg-c-card-overflow, var(--mg-c-card-overflow-default));
  width: 100%;
  min-width: var(--mg-c-card-min-width);
  max-width: var(--mg-c-card-max-width);
  box-sizing: border-box;
  padding: var(--mg-c-card-padding, var(--mg-c-card-padding-default));
  border: var(--mg-c-card-border, var(--mg-c-card-border-default));
  border-radius: var(--mg-c-card-border-radius, var(--mg-c-card-border-radius-default));
  background: var(--mg-c-card-background, var(--mg-c-card-background-default));
  box-shadow: var(--mg-c-card-box-shadow, var(--mg-c-card-box-shadow-default));

  @include reset-slot-card-variables;
  @include card-variants('info', 'warning', 'success', 'danger', 'app');

  &__bar {
    position: absolute;
    top: 0;
    left: 0;
    width: 0.3rem;
    height: 100%;
  }
}
