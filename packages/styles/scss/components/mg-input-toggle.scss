@use 'mg-input-readonly';
@use '../utils/a11y';
@use '../base/anchor';

/**
* Toggle
*/

$color-app-light: color-mix(in srgb, var(--mg-b-color-app), white 80%);

.mg-c-input {
  &__toggle-item-container {
    $border-radius-value: calc(((var(--mg-b-font-size) * var(--mg-b-line-height)) + (2 * var(--mg-b-size-4))) / var(--mg-c-input-toggle-border-radius-ratio));

    overflow: hidden;
    box-sizing: border-box;
    padding: var(--mg-b-size-4) var(--mg-b-size-8);
    border: 0;
    border-radius: $border-radius-value;
    background-color: unset;
    color: var(--mg-b-color-dark);
    font-weight: unset;
    text-overflow: ellipsis;
    white-space: nowrap;

    &:first-of-type {
      background-color: $color-app-light;
      color: var(--mg-b-color-app);
      font-weight: 600;
    }
  }

  &__button-toggle {
    /* stylelint-disable scss/operator-no-newline-after */
    $border-radius-value: calc(
      ((var(--mg-b-font-size) * var(--mg-b-line-height)) + (2 * ((var(--mg-b-size-4) + var(--mg-b-size-4)) + var(--mg-c-input-border-width)))) /
        var(--mg-c-input-toggle-border-radius-ratio)
    );
    /* stylelint-enable scss/operator-no-newline-after */

    display: flex;
    min-width: 0;
    padding: var(--mg-b-size-4);
    border-width: var(--mg-c-input-border-width);
    border-style: solid;
    border-color: var(--mg-c-input-color-border);
    border-radius: $border-radius-value;
    background-color: var(--mg-b-color-light);
    cursor: pointer;
    font-family: var(--mg-b-font-family);
    font-size: inherit;
    line-height: inherit;

    &:disabled {
      cursor: default;
    }
  }

  &.mg-c-input--toggle .mg-c-input__input-container {
    min-width: 0;
    flex: auto;
  }

  // toggle default active variation
  &.mg-c-input--toggle-is-active {
    .mg-c-input__toggle-item-container {
      &:first-of-type {
        background-color: unset;
        color: var(--mg-b-color-dark);
        font-weight: unset;
      }

      &:last-of-type {
        background-color: $color-app-light;
        color: var(--mg-b-color-info);
        font-weight: 600;
      }
    }
  }

  // icon
  &.mg-c-input--toggle-icon {
    /* stylelint-disable-next-line no-descending-specificity */
    .mg-c-input__toggle-item-container {
      $size: calc(((var(--mg-b-font-size) * var(--mg-b-line-height)) + (2 * var(--mg-b-size-4))));

      display: flex;
      width: $size;
      height: $size;
      align-items: center;
      justify-content: center;
      padding: 0;
      visibility: hidden;

      &:first-of-type {
        visibility: visible;
      }

      ::slotted(mg-icon) {
        display: flex;
      }
    }

    &.mg-c-input--toggle-is-active .mg-c-input__toggle-item-container {
      &:first-of-type {
        visibility: hidden;
      }

      &:last-of-type {
        visibility: visible;
      }
    }
  }

  // on/off
  &.mg-c-input--toggle-on-off {
    /* stylelint-disable-next-line no-descending-specificity */
    .mg-c-input__toggle-item-container:first-of-type {
      background-color: var(--mg-b-color-neutral-30);
      color: var(--mg-b-color-dark);
      font-weight: 600;
    }

    &.mg-c-input--toggle-is-active .mg-c-input__toggle-item-container:first-of-type {
      background-color: unset;
      color: var(--mg-b-color-dark);
      font-weight: unset;
    }
  }
}
