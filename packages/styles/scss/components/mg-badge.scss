/*!
 * @prop --mg-c-badge-size: Defines badge height and min-width. Default value: `--mg-b-size-2w`.
 * @prop --mg-c-badge-font-size: Defines badge font size. Default value: `1.1rem`.
 * @prop --mg-c-badge-text-color: Defines badge font color when used with the `text-color` variant and without `outline`. Default value: `--mg-b-color-light`.
 */

@import '../utils/a11y';

/* Mixins */
@mixin badge-variant($name, $backgroundColor, $color) {
  &.mg-c-badge--#{$name} {
    @if $name == 'text-color' {
      border-color: currentcolor;
      background-color: currentcolor;

      .mg-c-badge__value {
        color: var(--mg-c-badge-text-color, var(--mg-b-color-light));
      }
    } @else {
      border-color: var(--mg-b-color-#{$backgroundColor});
      background-color: var(--mg-b-color-#{$backgroundColor});
      color: var(--mg-b-color-#{$color});
    }

    &.mg-c-badge--outline {
      background-color: transparent;

      @if $name == 'text-color' {
        .mg-c-badge__value {
          color: currentcolor;
        }
      } @else {
        color: var(--mg-b-color-#{$backgroundColor});
      }
    }
  }
}

/* Styles */
.mg-c-badge {
  min-width: var(--mg-c-badge-size);
  height: var(--mg-c-badge-size);
  box-sizing: border-box;
  padding: 0 var(--mg-b-size-v);
  border: var(--mg-b-size-border) solid;
  border-radius: calc(var(--mg-c-badge-size) / 2);
  font-size: var(--mg-c-badge-font-size);
  font-weight: 600;
  line-height: var(--mg-c-badge-size);
  text-align: center;

  // Variant
  @include badge-variant('primary', 'dark', 'light');
  @include badge-variant('secondary', 'light', 'dark');
  @include badge-variant('success', 'success', 'dark');
  @include badge-variant('warning', 'warning', 'dark');
  @include badge-variant('danger', 'danger', 'light');
  @include badge-variant('info', 'info', 'light');
  @include badge-variant('text-color', none, 'light');
}

.mg-c-badge,
mg-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
}
