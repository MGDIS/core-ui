// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-input-numeric Should update mg-width 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--width-2">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric Should update mg-width 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--width-4">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric Should update mg-width 3`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--width-16">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric Should update mg-width 4`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric display error message with locale: fr 1`] = `
<mg-input-numeric lang="fr">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          Ce champ est obligatoire.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric display error message with locale: xx 1`] = `
<mg-input-numeric lang="xx">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric should display override error with setError component's public method 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric should display override error with setError component's public method 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric should display override error with setError component's public method 3`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric should display override error with setError component's public method 4`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          Override error
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  disabled: true,
  value: '1234567890'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" disabled="" id="identifier" name="identifier" type="text" value="$1,234,567,890.00">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  labelHide: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title class="mg-u-visually-hidden" identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  labelOnTop: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  readonly: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  readonly: true,
  labelOnTop: true,
  tooltip: 'Tooltip message'
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric mg-c-input--readonly">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier" readonly="">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  readonly: true,
  value: '1234567890'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          $1,234,567,890.00
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  readonly: true,
  value: '1234567890',
  lang: 'fr'
}: 1`] = `
<mg-input-numeric lang="fr" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1 234 567 890,00&nbsp;$US
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  readonly: true,
  value: '1234567890',
  lang: 'xx'
}: 1`] = `
<mg-input-numeric lang="xx" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          $1,234,567,890.00
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  required: true,
  disabled: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" disabled="" id="identifier" name="identifier" required="" type="text" value="$1,234,567,890.00">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  required: true,
  readonly: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          $1,234,567,890.00
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  required: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text" value="$1,234,567,890.00">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0Zm-7.75 4V7h1.5v5h-1.5Zm0-8v1.5h1.5V4h-1.5Z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
        <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
          <mg-icon>
            <mock:shadow-root>
              <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
                <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0Zm-7.75 4V7h1.5v5h-1.5Zm0-8v1.5h1.5V4h-1.5Z" fill="currentColor" fill-rule="evenodd"></path>
              </svg>
            </mock:shadow-root>
          </mg-icon>
        </mg-tooltip>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  value: '1234567890',
  currency: 'EUR'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="€1,234,567,890.00">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  value: '1234567890',
  lang: 'fr'
}: 1`] = `
<mg-input-numeric lang="fr" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="1 234 567 890,00&nbsp;$US">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'currency',
  value: '1234567890',
  lang: 'xx'
}: 1`] = `
<mg-input-numeric lang="xx" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="$1,234,567,890.00">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with args { label: 'label', identifier: 'identifier', type: 'currency' }: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with slot. 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--is-input-group-append mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <mg-button aria-label="search" role="button" slot="append-input" tabindex="0">
    <mock:shadow-root>
      <div class="mg-c-button mg-c-button--primary" id="button-identifier">
        <div class="mg-c-button__content">
          <slot></slot>
        </div>
      </div>
    </mock:shadow-root>
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--calculator mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
          <path d="M12.83.67H3.17a.5.5 0 0 0-.5.5v13.66a.5.5 0 0 0 .5.5h9.66a.5.5 0 0 0 .5-.5V1.17a.5.5 0 0 0-.5-.5ZM5.58 13.39a.29.29 0 0 1-.28.3H4.1a.29.29 0 0 1-.3-.28v-1.2a.29.29 0 0 1 .28-.3h1.2a.29.29 0 0 1 .3.28v1.2Zm0-3.28a.29.29 0 0 1-.3.3H4.1a.29.29 0 0 1-.3-.3V8.93a.29.29 0 0 1 .28-.3h1.2a.29.29 0 0 1 .3.28v1.2Zm3.29 3.28a.29.29 0 0 1-.3.3H7.38a.29.29 0 0 1-.3-.3v-1.18a.29.29 0 0 1 .3-.3h1.19a.29.29 0 0 1 .3.3Zm0-3.28a.32.32 0 0 1-.3.3H7.38a.32.32 0 0 1-.3-.3V8.93a.29.29 0 0 1 .3-.3h1.19a.29.29 0 0 1 .3.3Zm3.33 3.28a.29.29 0 0 1-.28.3h-1.25a.29.29 0 0 1-.3-.28V8.93a.29.29 0 0 1 .28-.3h1.25a.29.29 0 0 1 .3.28v4.48Zm0-7.15a.29.29 0 0 1-.3.3H4.1a.29.29 0 0 1-.3-.3V2.61a.29.29 0 0 1 .28-.3h7.82a.29.29 0 0 1 .3.28v3.65Z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
    Calculate
  </mg-button>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should render with slot. 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--is-append-input-slot-content mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <span slot="append-input">
    km
  </span>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should trigger events 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should update display value when value props change 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency Should update display value when value props change 2`] = `
<mg-input-numeric value="10">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="$10.00">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency display error with displayError component's public method 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency display error with displayError component's public method 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" disabled="" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type currency validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  disabled: true,
  value: '1234567890'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" disabled="" id="identifier" name="identifier" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  labelHide: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title class="mg-u-visually-hidden" identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  labelOnTop: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  readonly: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  readonly: true,
  labelOnTop: true,
  tooltip: 'Tooltip message'
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric mg-c-input--readonly">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier" readonly="">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  readonly: true,
  value: '1234567890'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1,234,567,890
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  readonly: true,
  value: '1234567890',
  lang: 'fr'
}: 1`] = `
<mg-input-numeric lang="fr" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1 234 567 890
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  readonly: true,
  value: '1234567890',
  lang: 'xx'
}: 1`] = `
<mg-input-numeric lang="xx" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1,234,567,890
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  required: true,
  disabled: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" disabled="" id="identifier" name="identifier" required="" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  required: true,
  readonly: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1,234,567,890
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  required: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0Zm-7.75 4V7h1.5v5h-1.5Zm0-8v1.5h1.5V4h-1.5Z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
        <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
          <mg-icon>
            <mock:shadow-root>
              <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
                <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0Zm-7.75 4V7h1.5v5h-1.5Zm0-8v1.5h1.5V4h-1.5Z" fill="currentColor" fill-rule="evenodd"></path>
              </svg>
            </mock:shadow-root>
          </mg-icon>
        </mg-tooltip>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  value: '1234567890',
  currency: 'EUR'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  value: '1234567890',
  lang: 'fr'
}: 1`] = `
<mg-input-numeric lang="fr" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="1 234 567 890">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'decimal',
  value: '1234567890',
  lang: 'xx'
}: 1`] = `
<mg-input-numeric lang="xx" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with args { label: 'label', identifier: 'identifier', type: 'decimal' }: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with slot. 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--is-input-group-append mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <mg-button aria-label="search" role="button" slot="append-input" tabindex="0">
    <mock:shadow-root>
      <div class="mg-c-button mg-c-button--primary" id="button-identifier">
        <div class="mg-c-button__content">
          <slot></slot>
        </div>
      </div>
    </mock:shadow-root>
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--calculator mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
          <path d="M12.83.67H3.17a.5.5 0 0 0-.5.5v13.66a.5.5 0 0 0 .5.5h9.66a.5.5 0 0 0 .5-.5V1.17a.5.5 0 0 0-.5-.5ZM5.58 13.39a.29.29 0 0 1-.28.3H4.1a.29.29 0 0 1-.3-.28v-1.2a.29.29 0 0 1 .28-.3h1.2a.29.29 0 0 1 .3.28v1.2Zm0-3.28a.29.29 0 0 1-.3.3H4.1a.29.29 0 0 1-.3-.3V8.93a.29.29 0 0 1 .28-.3h1.2a.29.29 0 0 1 .3.28v1.2Zm3.29 3.28a.29.29 0 0 1-.3.3H7.38a.29.29 0 0 1-.3-.3v-1.18a.29.29 0 0 1 .3-.3h1.19a.29.29 0 0 1 .3.3Zm0-3.28a.32.32 0 0 1-.3.3H7.38a.32.32 0 0 1-.3-.3V8.93a.29.29 0 0 1 .3-.3h1.19a.29.29 0 0 1 .3.3Zm3.33 3.28a.29.29 0 0 1-.28.3h-1.25a.29.29 0 0 1-.3-.28V8.93a.29.29 0 0 1 .28-.3h1.25a.29.29 0 0 1 .3.28v4.48Zm0-7.15a.29.29 0 0 1-.3.3H4.1a.29.29 0 0 1-.3-.3V2.61a.29.29 0 0 1 .28-.3h7.82a.29.29 0 0 1 .3.28v3.65Z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
    Calculate
  </mg-button>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should render with slot. 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--is-append-input-slot-content mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <span slot="append-input">
    km
  </span>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should trigger events 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should update display value when value props change 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal Should update display value when value props change 2`] = `
<mg-input-numeric value="10">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="10">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal display error with displayError component's public method 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal display error with displayError component's public method 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" disabled="" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type decimal validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  disabled: true,
  value: '1234567890'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" disabled="" id="identifier" name="identifier" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  labelHide: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title class="mg-u-visually-hidden" identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  labelOnTop: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  readonly: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  readonly: true,
  labelOnTop: true,
  tooltip: 'Tooltip message'
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric mg-c-input--readonly">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier" readonly="">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  readonly: true,
  value: '1234567890'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1,234,567,890
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  readonly: true,
  value: '1234567890',
  lang: 'fr'
}: 1`] = `
<mg-input-numeric lang="fr" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1 234 567 890
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  readonly: true,
  value: '1234567890',
  lang: 'xx'
}: 1`] = `
<mg-input-numeric lang="xx" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1,234,567,890
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  required: true,
  disabled: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" disabled="" id="identifier" name="identifier" required="" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  required: true,
  readonly: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          1,234,567,890
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  required: true,
  value: '1234567890',
  helpText: 'My help text'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0Zm-7.75 4V7h1.5v5h-1.5Zm0-8v1.5h1.5V4h-1.5Z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--numeric">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
        <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
          <mg-icon>
            <mock:shadow-root>
              <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
                <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0Zm-7.75 4V7h1.5v5h-1.5Zm0-8v1.5h1.5V4h-1.5Z" fill="currentColor" fill-rule="evenodd"></path>
              </svg>
            </mock:shadow-root>
          </mg-icon>
        </mg-tooltip>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  value: '1234567890',
  currency: 'EUR'
}: 1`] = `
<mg-input-numeric value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  value: '1234567890',
  lang: 'fr'
}: 1`] = `
<mg-input-numeric lang="fr" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="1 234 567 890">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'integer',
  value: '1234567890',
  lang: 'xx'
}: 1`] = `
<mg-input-numeric lang="xx" value="1234567890">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="1,234,567,890">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with args { label: 'label', identifier: 'identifier', type: 'integer' }: 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with slot. 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--is-input-group-append mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <mg-button aria-label="search" role="button" slot="append-input" tabindex="0">
    <mock:shadow-root>
      <div class="mg-c-button mg-c-button--primary" id="button-identifier">
        <div class="mg-c-button__content">
          <slot></slot>
        </div>
      </div>
    </mock:shadow-root>
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--calculator mg-c-icon--size-regular" focusable="false" viewBox="0 0 16 16">
          <path d="M12.83.67H3.17a.5.5 0 0 0-.5.5v13.66a.5.5 0 0 0 .5.5h9.66a.5.5 0 0 0 .5-.5V1.17a.5.5 0 0 0-.5-.5ZM5.58 13.39a.29.29 0 0 1-.28.3H4.1a.29.29 0 0 1-.3-.28v-1.2a.29.29 0 0 1 .28-.3h1.2a.29.29 0 0 1 .3.28v1.2Zm0-3.28a.29.29 0 0 1-.3.3H4.1a.29.29 0 0 1-.3-.3V8.93a.29.29 0 0 1 .28-.3h1.2a.29.29 0 0 1 .3.28v1.2Zm3.29 3.28a.29.29 0 0 1-.3.3H7.38a.29.29 0 0 1-.3-.3v-1.18a.29.29 0 0 1 .3-.3h1.19a.29.29 0 0 1 .3.3Zm0-3.28a.32.32 0 0 1-.3.3H7.38a.32.32 0 0 1-.3-.3V8.93a.29.29 0 0 1 .3-.3h1.19a.29.29 0 0 1 .3.3Zm3.33 3.28a.29.29 0 0 1-.28.3h-1.25a.29.29 0 0 1-.3-.28V8.93a.29.29 0 0 1 .28-.3h1.25a.29.29 0 0 1 .3.28v4.48Zm0-7.15a.29.29 0 0 1-.3.3H4.1a.29.29 0 0 1-.3-.3V2.61a.29.29 0 0 1 .28-.3h7.82a.29.29 0 0 1 .3.28v3.65Z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
    Calculate
  </mg-button>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should render with slot. 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--is-append-input-slot-content mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <span slot="append-input">
    km
  </span>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should trigger events 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should update display value when value props change 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer Should update display value when value props change 2`] = `
<mg-input-numeric value="10">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="text" value="10">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer display error with displayError component's public method 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer display error with displayError component's public method 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" disabled="" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" type="text">
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;

exports[`mg-input-numeric type integer validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-numeric>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--numeric mg-c-input--readonly">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-numeric>
`;
