// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-input render Should render with args {
  classCollection: [xe],
  labelOnTop: true,
  tooltip: 'Batman is a DC Comics license'
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args {
  tooltip: 'Batman is a DC Comics license',
  tooltipPosition: 'input',
  labelOnTop: true
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--label-on-top">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
      <mg-tooltip identifier="identifier-tooltip" message="Batman is a DC Comics license">
        <mg-icon icon="info-circle"></mg-icon>
      </mg-tooltip>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { classCollection: [xe] }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { classCollection: [xe] }: 2`] = `
<mg-input aria-labelledby="identifier-title" class="mg-c-input mg-c-input--fieldset" role="group">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="true" readonly="false" required="false" slot="label">
    <!---->
    <legend class="mg-c-input-title" id="identifier-title">
      <span class="mg-c-input-title__text">
        label
      </span>
    </legend>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { classCollection: [xe] }: 3`] = `
<mg-input class="mg-c-input mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { classCollection: [xe] }: 4`] = `
<mg-input class="mg-c-input mg-c-input--disabled">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { classCollection: [xe], inputVerticalList: true }: 1`] = `
<mg-input class="mg-c-input mg-c-input--readonly" inputverticallist="">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { errorMessage: 'This is an error' }: 1`] = `
<mg-input class="mg-c-input mg-c-input--has-error">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div aria-live="assertive" class="mg-c-input__error">
        <slot name="error"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-error" id="identifier" type="file">
  <div id="identifier-error" slot="error">
    This is an error
  </div>
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { errorMessage: 'This is an error', classCollection: [xe] }: 1`] = `
<mg-input class="mg-c-input mg-c-input--has-error mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-error" id="identifier" type="file">
  <div id="identifier-error" slot="error">
    This is an error
  </div>
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { errorMessage: 'This is an error', classCollection: [xe] }: 2`] = `
<mg-input class="mg-c-input mg-c-input--disabled mg-c-input--has-error">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-error" id="identifier" type="file">
  <div id="identifier-error" slot="error">
    This is an error
  </div>
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { helpText: 'Hello joker' }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div class="mg-c-input__help-text">
        <slot name="help-text"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-help-text" id="identifier" type="file">
  <div id="identifier-help-text" slot="help-text">
    Hello joker
  </div>
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { labelHide: true }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title mg-u-visually-hidden">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { labelOnTop: true }: 1`] = `
<mg-input class="mg-c-input mg-c-input--label-on-top">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { readonlyValue: 'batman', classCollection: [xe] }: 1`] = `
<mg-input class="mg-c-input mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong>
        batman
      </strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { readonlyValue: [Array], classCollection: [xe] }: 1`] = `
<mg-input class="mg-c-input mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <ul>
        <li>
          <strong>
            batman
          </strong>
        </li>
        <li>
          <strong>
            joker
          </strong>
        </li>
        <li>
          <strong>
            bane
          </strong>
        </li>
      </ul>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { required: true }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="true" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
      <span class="mg-c-input-title__required">
        <span class="mg-u-is-asterisk">
          *
        </span>
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { required: true, classCollection: [xe], helpText: 'Hello joker' }: 1`] = `
<mg-input class="mg-c-input mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-help-text" id="identifier" type="file">
  <div id="identifier-help-text" slot="help-text">
    Hello joker
  </div>
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="true" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { required: true, classCollection: [xe], helpText: 'Hello joker' }: 2`] = `
<mg-input class="mg-c-input mg-c-input--disabled">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div class="mg-c-input__help-text">
        <slot name="help-text"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-help-text" id="identifier" type="file">
  <div id="identifier-help-text" slot="help-text">
    Hello joker
  </div>
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { tooltip: 'Batman is a DC Comics license' }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
        <mg-tooltip identifier="identifier-tooltip" message="Batman is a DC Comics license">
          <mg-icon icon="info-circle"></mg-icon>
        </mg-tooltip>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { tooltip: 'Batman is a DC Comics license', tooltipPosition: 'label' }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
      <mg-tooltip identifier="identifier-tooltip" message="Batman is a DC Comics license">
        <mg-icon icon="info-circle"></mg-icon>
      </mg-tooltip>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args {}: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should update "error" slot 1`] = `
<mg-input class="mg-c-input mg-c-input--has-error">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div aria-live="assertive" class="mg-c-input__error">
        <slot name="error"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-error" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
  <div id="identifier-error" slot="error">
    This is an error
  </div>
</mg-input>
`;

exports[`mg-input render Should update "error" slot 2`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should update "help-text" slot 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div class="mg-c-input__help-text">
        <slot name="help-text"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-help-text" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
  <div id="identifier-help-text" slot="help-text">
    Hello joker
  </div>
</mg-input>
`;

exports[`mg-input render Should update "help-text" slot 2`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should update "label" slot 1`] = `
{
  "body": <body>
  <mg-input class="mg-c-input">
    <mock:shadow-root>
      <div class="mg-c-input__title">
        <slot name="label"></slot>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <slot></slot>
        </div>
      </div>
    </mock:shadow-root>
    <input aria-describedby="" id="identifier" type="file">
    <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
      <!---->
      <label class="mg-c-input-title" htmlfor="identifier">
        <span class="mg-c-input-title__text">
          batma,
        </span>
      </label>
    </mg-input-title>
  </mg-input>
</body>,
  "build": {
    "allRenderFn": true,
    "appendChildSlotFix": false,
    "asyncLoading": true,
    "asyncQueue": true,
    "attachStyles": false,
    "cloneNodeFix": false,
    "cmpDidLoad": true,
    "cmpDidRender": true,
    "cmpDidUnload": true,
    "cmpDidUpdate": true,
    "cmpShouldUpdate": true,
    "cmpWillLoad": true,
    "cmpWillRender": true,
    "cmpWillUpdate": true,
    "connectedCallback": true,
    "constructableCSS": true,
    "cssAnnotations": false,
    "devTools": false,
    "disconnectedCallback": true,
    "element": true,
    "event": true,
    "experimentalScopedSlotChanges": false,
    "experimentalSlotFixes": false,
    "formAssociated": true,
    "hasRenderFn": true,
    "hostListener": true,
    "hostListenerTarget": true,
    "hostListenerTargetBody": true,
    "hostListenerTargetDocument": true,
    "hostListenerTargetParent": true,
    "hostListenerTargetWindow": true,
    "hotModuleReplacement": false,
    "hydrateClientSide": false,
    "hydrateServerSide": false,
    "hydratedAttribute": false,
    "hydratedClass": true,
    "initializeNextTick": true,
    "invisiblePrehydration": true,
    "isDebug": false,
    "isDev": true,
    "isTesting": true,
    "lazyLoad": true,
    "lifecycle": true,
    "lifecycleDOMEvents": true,
    "member": true,
    "method": true,
    "mode": true,
    "observeAttribute": true,
    "profile": true,
    "prop": true,
    "propBoolean": true,
    "propMutable": true,
    "propNumber": true,
    "propString": true,
    "reflect": true,
    "scoped": true,
    "scopedSlotTextContentFix": false,
    "scriptDataOpts": false,
    "shadowDelegatesFocus": true,
    "shadowDom": true,
    "shadowDomShim": false,
    "slot": true,
    "slotChildNodesFix": false,
    "slotRelocation": true,
    "state": true,
    "style": true,
    "svg": true,
    "taskQueue": true,
    "transformTagName": true,
    "updatable": true,
    "vdomAttribute": true,
    "vdomClass": true,
    "vdomFunctional": true,
    "vdomKey": true,
    "vdomListener": true,
    "vdomPropOrAttr": true,
    "vdomRef": true,
    "vdomRender": true,
    "vdomStyle": true,
    "vdomText": true,
    "vdomXlink": true,
    "watchCallback": true,
  },
  "doc": ,
  "flushLoadModule": [Function],
  "flushQueue": [Function],
  "setContent": [Function],
  "styles": Map {},
  "waitForChanges": [Function],
  "win": [MockWindow],
}
`;

exports[`mg-input render Should update "label" slot 2`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        joker
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;
