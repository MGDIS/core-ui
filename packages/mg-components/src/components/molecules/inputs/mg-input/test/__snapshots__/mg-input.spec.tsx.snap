// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  'data-input-type': 'fieldset'
}: 1`] = `
<mg-input aria-labelledby="identifier-title" class="mg-c-input mg-c-input--fieldset" data-input-type="fieldset" role="group">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="true" readonly="false" required="false" slot="label">
    <!---->
    <legend class="mg-c-input-title" id="identifier-title">
      <span class="mg-c-input-title__text">
        label
      </span>
    </legend>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  errorMessage: 'This is an error'
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--has-error">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div aria-live="assertive" class="mg-c-input__error">
        <slot name="error"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-error" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
  <div id="identifier-error" slot="error">
    This is an error
  </div>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  errorMessage: 'This is an error',
  disabled: true
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--has-error">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-error" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
  <div id="identifier-error" slot="error">
    This is an error
  </div>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  errorMessage: 'This is an error',
  readonly: true
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--has-error mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-error" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
  <div id="identifier-error" slot="error">
    This is an error
  </div>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  readonly: true,
  inputVerticalList: true
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--readonly" inputverticallist="">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  readonly: true,
  labelOnTop: true,
  tooltip: 'Batman is a DC Comics license'
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  readonlyValue: [Array],
  readonly: true
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <ul>
        <li>
          <strong>
            batman
          </strong>
        </li>
        <li>
          <strong>
            joker
          </strong>
        </li>
        <li>
          <strong>
            bane
          </strong>
        </li>
      </ul>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  required: true,
  disabled: true,
  helpText: 'Hello joker'
}: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div class="mg-c-input__help-text">
        <slot name="help-text"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-help-text" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
  <div id="identifier-help-text" slot="help-text">
    Hello joker
  </div>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  required: true,
  readonly: true,
  helpText: 'Hello joker'
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-help-text" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="true" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
  <div id="identifier-help-text" slot="help-text">
    Hello joker
  </div>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  tooltip: 'Batman is a DC Comics license'
}: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
        <mg-tooltip identifier="identifier-tooltip" message="Batman is a DC Comics license">
          <mg-icon icon="info-circle"></mg-icon>
        </mg-tooltip>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  tooltip: 'Batman is a DC Comics license',
  tooltipPosition: 'input',
  labelOnTop: true
}: 1`] = `
<mg-input class="mg-c-input mg-c-input--label-on-top">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
      <mg-tooltip identifier="identifier-tooltip" message="Batman is a DC Comics license">
        <mg-icon icon="info-circle"></mg-icon>
      </mg-tooltip>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args {
  label: 'label',
  identifier: 'identifier',
  tooltip: 'Batman is a DC Comics license',
  tooltipPosition: 'label'
}: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
      <mg-tooltip identifier="identifier-tooltip" message="Batman is a DC Comics license">
        <mg-icon icon="info-circle"></mg-icon>
      </mg-tooltip>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier' }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier', classCollection: [xe] }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier', disabled: true }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier', helpText: 'Hello joker' }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div class="mg-c-input__help-text">
        <slot name="help-text"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-help-text" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
  <div id="identifier-help-text" slot="help-text">
    Hello joker
  </div>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier', inputVerticalList: true }: 1`] = `
<mg-input class="mg-c-input" inputverticallist="">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier', labelHide: true }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title mg-u-visually-hidden">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier', labelOnTop: true }: 1`] = `
<mg-input class="mg-c-input mg-c-input--label-on-top">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier', readonly: true }: 1`] = `
<mg-input class="mg-c-input mg-c-input--readonly">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <strong></strong>
      <slot></slot>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
    <!---->
    <span class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </span>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should render with args { label: 'label', identifier: 'identifier', required: true }: 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="true" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
      <span class="mg-c-input-title__required">
        <span class="mg-u-is-asterisk">
          *
        </span>
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should update "error" slot 1`] = `
<mg-input class="mg-c-input mg-c-input--has-error">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div aria-live="assertive" class="mg-c-input__error">
        <slot name="error"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-error" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
  <div id="identifier-error" slot="error">
    This is an error
  </div>
</mg-input>
`;

exports[`mg-input render Should update "error" slot 2`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should update "help-text" slot 1`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
      <div class="mg-c-input__help-text">
        <slot name="help-text"></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="identifier-help-text" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
  <div id="identifier-help-text" slot="help-text">
    Hello joker
  </div>
</mg-input>
`;

exports[`mg-input render Should update "help-text" slot 2`] = `
<mg-input class="mg-c-input">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should update mg-width 1`] = `
<mg-input class="mg-c-input mg-c-input--width-2">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should update mg-width 2`] = `
<mg-input class="mg-c-input mg-c-input--width-4">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;

exports[`mg-input render Should update mg-width 3`] = `
<mg-input class="mg-c-input mg-c-input--width-16">
  <mock:shadow-root>
    <div class="mg-c-input__title">
      <slot name="label"></slot>
    </div>
    <div class="mg-c-input__input-container">
      <div class="mg-c-input__input">
        <slot></slot>
      </div>
    </div>
  </mock:shadow-root>
  <input aria-describedby="" id="identifier" type="file">
  <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
    <!---->
    <label class="mg-c-input-title" htmlfor="identifier">
      <span class="mg-c-input-title__text">
        label
      </span>
    </label>
  </mg-input-title>
</mg-input>
`;
