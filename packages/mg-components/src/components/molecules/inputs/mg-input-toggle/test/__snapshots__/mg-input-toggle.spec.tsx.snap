// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-input-toggle Should trigger events for items with inputValue: { items: [Array], expected: 'a', value: 'b' } 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        My help text
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle Should trigger events for items with inputValue: { items: [Array], expected: 'b', value: undefined } 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        My help text
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle Should trigger events for items with inputValue: { items: [Array], expected: 2, value: 1 } 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        My help text
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle Should trigger events for items with inputValue: { items: [Array], expected: false, value: true } 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        My help text
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="robin">
    robin
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle Should trigger events for items with inputValue: { items: [Array], expected: true, value: false } 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        My help text
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="robin">
    robin
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle setError should display override error with setError component's public method 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle setError should display override error with setError component's public method 2`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--has-error mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div aria-live="assertive" class="mg-c-input__error">
            <slot name="error"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="identifier-error" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
      <div id="identifier-error" slot="error">
        error Batman
      </div>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  disabled: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--disabled mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  helpText: 'Hello Joker'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        Hello Joker
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  disabled: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--disabled mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  helpText: 'Hello Joker'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        Hello Joker
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  labelHide: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title mg-u-visually-hidden">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  readonly: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--readonly mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <strong>
            Oui
          </strong>
          <slot></slot>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
            <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
              <mg-icon>
                <mock:shadow-root>
                  <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                    <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                  </svg>
                </mock:shadow-root>
              </mg-icon>
            </mg-tooltip>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'input',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isIcon: true,
  isOnOff: true,
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'label'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-on-off">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
  <span slot="item-2">
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  disabled: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--disabled mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  helpText: 'Hello Joker'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        Hello Joker
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  labelHide: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title mg-u-visually-hidden">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  readonly: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--readonly mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <strong>
            Batman
          </strong>
          <slot></slot>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
            <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
              <mg-icon>
                <mock:shadow-root>
                  <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                    <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                  </svg>
                </mock:shadow-root>
              </mg-icon>
            </mg-tooltip>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'input',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  isOnOff: false,
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'label'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  labelHide: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title mg-u-visually-hidden">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  readonly: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--readonly mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <strong>
            Batman
          </strong>
          <slot></slot>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
            <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
              <mg-icon>
                <mock:shadow-root>
                  <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                    <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                  </svg>
                </mock:shadow-root>
              </mg-icon>
            </mg-tooltip>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'input',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'label'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  disabled: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--disabled mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  helpText: 'Hello Joker'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        Hello Joker
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  labelHide: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title mg-u-visually-hidden">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  readonly: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--readonly mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <strong>
            Joker
          </strong>
          <slot></slot>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
            <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
              <mg-icon>
                <mock:shadow-root>
                  <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                    <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                  </svg>
                </mock:shadow-root>
              </mg-icon>
            </mg-tooltip>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'input',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: '',
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'label'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  disabled: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--disabled mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  helpText: 'Hello Joker'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        Hello Joker
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  labelHide: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title mg-u-visually-hidden">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  readonly: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--readonly mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <strong>
            Joker
          </strong>
          <slot></slot>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
            <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
              <mg-icon>
                <mock:shadow-root>
                  <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                    <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                  </svg>
                </mock:shadow-root>
              </mg-icon>
            </mg-tooltip>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'input',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: 'true',
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'label'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  disabled: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--disabled mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  helpText: 'Hello Joker'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
          <div class="mg-c-input__help-text">
            <slot name="help-text"></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="identifier-help-text" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <div id="identifier-help-text" slot="help-text">
        Hello Joker
      </div>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  labelHide: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title mg-u-visually-hidden">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  readonly: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--readonly mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <strong>
            Joker
          </strong>
          <slot></slot>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" aria-readonly="" class="mg-c-input__button-toggle" disabled="" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="true" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
            <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
              <mg-icon>
                <mock:shadow-root>
                  <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                    <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                  </svg>
                </mock:shadow-root>
              </mg-icon>
            </mg-tooltip>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'input',
  labelOnTop: true
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--label-on-top mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args {
  label: 'label',
  identifier: 'identifier',
  items: [Array],
  value: true,
  tooltip: 'My Tooltip Message',
  tooltipPosition: 'label'
}: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args { label: 'label', identifier: 'identifier', items: [Array] }: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="false" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;

exports[`mg-input-toggle template Should render with args { label: 'label', identifier: 'identifier', items: [Array], value: '' }: 1`] = `
<mg-input-toggle>
  <mock:shadow-root>
    <mg-input class="mg-c-input mg-c-input--toggle mg-c-input--toggle-is-active">
      <mock:shadow-root>
        <div class="mg-c-input__title">
          <slot name="label"></slot>
        </div>
        <div class="mg-c-input__input-container">
          <div class="mg-c-input__input">
            <slot></slot>
          </div>
        </div>
      </mock:shadow-root>
      <button aria-checked="true" aria-describedby="" class="mg-c-input__button-toggle" id="identifier" role="switch" type="button">
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-1"></slot>
        </span>
        <span aria-hidden="true" class="mg-c-input__toggle-item-container">
          <slot name="item-2"></slot>
        </span>
      </button>
      <mg-input-title identifier="identifier" is-legend="false" readonly="false" required="false" slot="label">
        <span class="mg-c-input-title__text">
          label
        </span>
      </mg-input-title>
    </mg-input>
  </mock:shadow-root>
  <span slot="item-1" title="Batman">
    Batman
  </span>
  <span slot="item-2" title="Joker">
    Joker
  </span>
</mg-input-toggle>
`;
