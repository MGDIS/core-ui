// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  displayCharacterLeft: false
}: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 0;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  readonly: true,
  labelOnTop: true,
  tooltip: 'Tooltip message'
}: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--readonly mg-c-input--text mg-c-input--width-full">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier" readonly="">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  readonly: true,
  value: 'blu'
}: 1`] = `
<mg-input-text value="blu">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--readonly mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          blu
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  required: true,
  disabled: true,
  value: 'blu',
  helpText: 'My help text'
}: 1`] = `
<mg-input-text value="blu">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-help-text" aria-invalid="false" class="mg-c-input__box" disabled="" id="identifier" maxlength="400" name="identifier" required="" type="text" value="blu">
            <mg-character-left characters="blu" identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  required: true,
  readonly: true,
  value: 'blu',
  helpText: 'My help text'
}: 1`] = `
<mg-input-text value="blu">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--readonly mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          blu
        </strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  required: true,
  value: 'blu',
  helpText: 'My help text'
}: 1`] = `
<mg-input-text value="blu">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-help-text" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text" value="blu">
            <mg-character-left characters="blu" identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
          </mg-tooltip>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--text mg-c-input--width-full">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
        <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
          <mg-icon>
            <mock:shadow-root>
              <svg aria-hidden="true" class="mg-c-icon mg-c-icon--info-circle mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                <path clip-rule="evenodd" d="M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0m-7.75 4V7h1.5v5zm0-8v1.5h1.5V4z" fill="currentColor" fill-rule="evenodd"></path>
              </svg>
            </mock:shadow-root>
          </mg-icon>
        </mg-tooltip>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args {
  label: 'label',
  identifier: 'identifier',
  type: 'search',
  icon: 'magnifying-glass'
}: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--has-icon mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <mg-icon>
              <mock:shadow-root>
                <svg aria-hidden="true" class="mg-c-icon mg-c-icon--magnifying-glass mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                  <path clip-rule="evenodd" d="M2 7a5 5 0 1 1 8.871 3.164L14 13.292l-.707.707-3.128-3.128A5 5 0 0 1 2 7m5 4a4 4 0 1 1 0-8 4 4 0 0 1 0 8" fill="currentColor" fill-rule="evenodd"></path>
                </svg>
              </mock:shadow-root>
            </mg-icon>
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="search">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args { label: 'label', identifier: 'identifier' }: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args { label: 'label', identifier: 'identifier', datalistoptions: [Array] }: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" autocomplete="off" class="mg-c-input__box" id="identifier" list="identifier-datalist" maxlength="400" name="identifier" type="text">
            <datalist id="identifier-datalist">
              <option value="batman"></option>
              <option value="robin"></option>
              <option value="joker"></option>
            </datalist>
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args { label: 'label', identifier: 'identifier', labelHide: true }: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title class="mg-u-visually-hidden" identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args { label: 'label', identifier: 'identifier', labelOnTop: true }: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--text mg-c-input--width-full">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args { label: 'label', identifier: 'identifier', readonly: true }: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--readonly mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with args { label: 'label', identifier: 'identifier', type: 'search' }: 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="search">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should render with slot. 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--is-input-group-append mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="search">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <mg-button aria-label="search" role="button" slot="append-input" tabindex="0">
    <mock:shadow-root>
      <div class="mg-c-button mg-c-button--primary">
        <div class="mg-c-button__content">
          <slot></slot>
        </div>
      </div>
    </mock:shadow-root>
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--magnifying-glass mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path clip-rule="evenodd" d="M2 7a5 5 0 1 1 8.871 3.164L14 13.292l-.707.707-3.128-3.128A5 5 0 0 1 2 7m5 4a4 4 0 1 1 0-8 4 4 0 0 1 0 8" fill="currentColor" fill-rule="evenodd"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
    Search
  </mg-button>
</mg-input-text>
`;

exports[`mg-input-text Should render with slot. 2`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--is-append-input-slot-content mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="search">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <span slot="append-input">
    test
  </span>
</mg-input-text>
`;

exports[`mg-input-text Should render with slot. 3`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--has-buttons-group-append mg-c-input--is-input-group-append mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="search">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
  <mg-button aria-label="cancel" is-icon="" role="button" slot="append-input" tabindex="0">
    <mock:shadow-root>
      <div class="mg-c-button mg-c-button--icon mg-c-button--primary">
        <div class="mg-c-button__content">
          <slot></slot>
        </div>
      </div>
    </mock:shadow-root>
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--cross mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="M14 3.05 12.95 2 8 6.95 3.05 2 2 3.05 6.95 8 2 12.95 3.05 14 8 9.05 12.95 14 14 12.95 9.05 8z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </mg-button>
  <mg-button aria-label="validate" is-icon="" role="button" slot="append-input" tabindex="0">
    <mock:shadow-root>
      <div class="mg-c-button mg-c-button--icon mg-c-button--primary">
        <div class="mg-c-button__content">
          <slot></slot>
        </div>
      </div>
    </mock:shadow-root>
    <mg-icon>
      <mock:shadow-root>
        <svg aria-hidden="true" class="mg-c-icon mg-c-icon--check mg-c-icon--size-regular" fill="none" focusable="false" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
          <path d="m15.27 4.23-1.11-1.18c-.11-.1-.27-.1-.38 0L6 10.36l-3.76-4a.187.187 0 0 0-.26 0L.71 7.6c-.07.07-.07.19 0 .26l5.12 5.41c.07.07.18.07.25 0l1.3-1.23 7.87-7.45c.1-.1.11-.26.01-.37h.01z" fill="currentColor"></path>
        </svg>
      </mock:shadow-root>
    </mg-icon>
  </mg-button>
</mg-input-text>
`;

exports[`mg-input-text Should trigger events 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full mg-u-is-focused">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-help-text" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should update mg-width 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-2">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should update mg-width 2`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-4">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text Should update mg-width 3`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-16">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text display error message with locale: fr 1`] = `
<mg-input-text lang="fr">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-error" aria-invalid="true" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          Ce champ est obligatoire.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text display error message with locale: xx 1`] = `
<mg-input-text lang="xx">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-error" aria-invalid="true" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text display error with displayError component's public method 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text display error with displayError component's public method 2`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-error" aria-invalid="true" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text should display override error with setError component's public method 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text should display override error with setError component's public method 2`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text should display override error with setError component's public method 3`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text should display override error with setError component's public method 4`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-error" aria-invalid="true" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" required="" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          Override error
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text validity, case next state is disabled validity ({ validity: false, valueMissing: true, patternMismatch: false }), valueMissing (%s), patternMismatch (%s) 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-error" aria-invalid="true" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" pattern="[a-z]*" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text validity, case next state is disabled validity ({ validity: false, valueMissing: true, patternMismatch: false }), valueMissing (%s), patternMismatch (%s) 2`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left" aria-invalid="false" class="mg-c-input__box" disabled="" id="identifier" maxlength="400" name="identifier" pattern="[a-z]*" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text validity, case next state is readonly validity ({ validity: false, valueMissing: true, patternMismatch: false }), valueMissing (%s), patternMismatch (%s) 1`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <div class="mg-c-input__with-character-left" style="--mg-character-left-message-length: 7;">
            <input aria-describedby="identifier-character-left identifier-error" aria-invalid="true" class="mg-c-input__box" id="identifier" maxlength="400" name="identifier" pattern="[a-z]*" type="text">
            <mg-character-left identifier="identifier-character-left" maxlength="400"></mg-character-left>
          </div>
          <slot name="append-input"></slot>
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;

exports[`mg-input-text validity, case next state is readonly validity ({ validity: false, valueMissing: true, patternMismatch: false }), valueMissing (%s), patternMismatch (%s) 2`] = `
<mg-input-text>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--readonly mg-c-input--text mg-c-input--width-full">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
        <slot name="append-input"></slot>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-text>
`;
