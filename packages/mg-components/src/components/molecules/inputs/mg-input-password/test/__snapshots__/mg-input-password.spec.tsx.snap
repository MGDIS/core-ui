// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-input-password Should render with args {
  label: 'label',
  identifier: 'identifier',
  readonly: true,
  labelOnTop: true,
  tooltip: 'Tooltip message'
}: 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--password mg-c-input--readonly mg-c-input--width-full">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier" readonly="">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <strong></strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args {
  label: 'label',
  identifier: 'identifier',
  readonly: true,
  value: 'blu'
}: 1`] = `
<mg-input-password value="blu">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--readonly mg-c-input--width-full">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          •••
        </strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args {
  label: 'label',
  identifier: 'identifier',
  required: true,
  disabled: true,
  value: 'blu',
  helpText: 'My help text'
}: 1`] = `
<mg-input-password value="blu">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" disabled="" id="identifier" name="identifier" required="" type="password" value="blu">
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args {
  label: 'label',
  identifier: 'identifier',
  required: true,
  readonly: true,
  value: 'blu',
  helpText: 'My help text'
}: 1`] = `
<mg-input-password value="blu">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--readonly mg-c-input--width-full">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong>
          •••
        </strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args {
  label: 'label',
  identifier: 'identifier',
  required: true,
  value: 'blu',
  helpText: 'My help text'
}: 1`] = `
<mg-input-password value="blu">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password" value="blu">
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args {
  label: 'label',
  identifier: 'identifier',
  tooltip: 'My Tooltip Message'
}: 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="password">
          <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
            <mg-icon icon="info-circle"></mg-icon>
          </mg-tooltip>
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args {
  label: 'label',
  identifier: 'identifier',
  tooltip: 'My Tooltip Message',
  labelOnTop: true
}: 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--password mg-c-input--width-full">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
        <mg-tooltip identifier="identifier-tooltip" message="My Tooltip Message">
          <mg-icon icon="info-circle"></mg-icon>
        </mg-tooltip>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args { label: 'label', identifier: 'identifier' }: 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args { label: 'label', identifier: 'identifier', labelHide: true }: 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title class="mg-u-visually-hidden" identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args { label: 'label', identifier: 'identifier', labelOnTop: true }: 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--label-on-top mg-c-input--password mg-c-input--width-full">
      <div class="mg-c-input__title">
        <mg-input-title identifier="identifier">
          label
        </mg-input-title>
      </div>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should render with args { label: 'label', identifier: 'identifier', readonly: true }: 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--readonly mg-c-input--width-full">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should trigger events 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="identifier-help-text" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
        <div class="mg-c-input__help-text" id="identifier-help-text">
          My help text
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should update mg-width 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-2">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should update mg-width 2`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-4">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password Should update mg-width 3`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-16">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password display error message with locale: fr 1`] = `
<mg-input-password lang="fr">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password">
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          Ce champ est obligatoire.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password display error message with locale: xx 1`] = `
<mg-input-password lang="xx">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password">
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password display error with displayError component's public method 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password display error with displayError component's public method 2`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password">
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password should display override error with setError component's public method 1`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password should display override error with setError component's public method 2`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password should display override error with setError component's public method 3`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password should display override error with setError component's public method 4`] = `
<mg-input-password>
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier" required="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" required="" type="password">
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          Override error
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-password patternerrormessage="Non">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password validity, case next state is disabled validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-password patternerrormessage="Non">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input">
          <input aria-describedby="" class="mg-c-input__box" disabled="" id="identifier" name="identifier" type="password">
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 1`] = `
<mg-input-password patternerrormessage="Non">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--width-full">
      <mg-input-title identifier="identifier">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <div class="mg-c-input__input mg-c-input__input--has-error">
          <input aria-describedby="identifier-error" class="mg-c-input__box" id="identifier" name="identifier" type="password">
        </div>
        <div aria-live="assertive" class="mg-c-input__error" id="identifier-error">
          This field is required.
        </div>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;

exports[`mg-input-password validity, case next state is readonly validity ({ validity: false, valueMissing: true }), valueMissing (%s) 2`] = `
<mg-input-password patternerrormessage="Non">
  <mock:shadow-root>
    <div class="mg-c-input mg-c-input--password mg-c-input--readonly mg-c-input--width-full">
      <mg-input-title identifier="identifier" readonly="">
        label
      </mg-input-title>
      <div class="mg-c-input__input-container">
        <strong></strong>
      </div>
    </div>
  </mock:shadow-root>
</mg-input-password>
`;
