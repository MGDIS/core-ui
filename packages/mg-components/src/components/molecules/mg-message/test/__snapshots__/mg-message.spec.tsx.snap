// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-message Should render a danger message with args { identifier: 'identifier' } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--danger" id="identifier" role="alert">
      <mg-card variant="danger" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a danger message with args { identifier: 'identifier', closeButton: true } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--danger" id="identifier" role="alert">
      <mg-card variant="danger" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Close message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a danger message with args { identifier: 'identifier', closeButton: true, lang: 'fr' } 1`] = `
<mg-message lang="fr">
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--danger" id="identifier" role="alert">
      <mg-card variant="danger" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Fermer le message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a danger message with args { identifier: 'identifier', closeButton: true, lang: 'xx' } 1`] = `
<mg-message lang="xx">
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--danger" id="identifier" role="alert">
      <mg-card variant="danger" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Close message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a danger message with args { identifier: 'identifier', noAriaRole: true } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--danger" id="identifier">
      <mg-card variant="danger" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a info message with args { identifier: 'identifier' } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--info" id="identifier" role="status">
      <mg-card variant="info" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="info-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a info message with args { identifier: 'identifier', closeButton: true } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--info" id="identifier" role="status">
      <mg-card variant="info" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="info-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Close message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a info message with args { identifier: 'identifier', closeButton: true, lang: 'fr' } 1`] = `
<mg-message lang="fr">
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--info" id="identifier" role="status">
      <mg-card variant="info" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="info-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Fermer le message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a info message with args { identifier: 'identifier', closeButton: true, lang: 'xx' } 1`] = `
<mg-message lang="xx">
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--info" id="identifier" role="status">
      <mg-card variant="info" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="info-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Close message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a info message with args { identifier: 'identifier', noAriaRole: true } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--info" id="identifier">
      <mg-card variant="info" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="info-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a success message with args { identifier: 'identifier' } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--success" id="identifier" role="alert">
      <mg-card variant="success" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="check-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a success message with args { identifier: 'identifier', closeButton: true } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--success" id="identifier" role="alert">
      <mg-card variant="success" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="check-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Close message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a success message with args { identifier: 'identifier', closeButton: true, lang: 'fr' } 1`] = `
<mg-message lang="fr">
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--success" id="identifier" role="alert">
      <mg-card variant="success" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="check-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Fermer le message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a success message with args { identifier: 'identifier', closeButton: true, lang: 'xx' } 1`] = `
<mg-message lang="xx">
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--success" id="identifier" role="alert">
      <mg-card variant="success" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="check-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Close message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a success message with args { identifier: 'identifier', noAriaRole: true } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--success" id="identifier">
      <mg-card variant="success" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="check-circle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a warning message with args { identifier: 'identifier' } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--warning" id="identifier" role="alert">
      <mg-card variant="warning" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-triangle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a warning message with args { identifier: 'identifier', closeButton: true } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--warning" id="identifier" role="alert">
      <mg-card variant="warning" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-triangle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Close message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a warning message with args { identifier: 'identifier', closeButton: true, lang: 'fr' } 1`] = `
<mg-message lang="fr">
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--warning" id="identifier" role="alert">
      <mg-card variant="warning" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-triangle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Fermer le message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a warning message with args { identifier: 'identifier', closeButton: true, lang: 'xx' } 1`] = `
<mg-message lang="xx">
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--close-button mg-c-message--warning" id="identifier" role="alert">
      <mg-card variant="warning" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-triangle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
        <span class="mg-c-message__close-button">
          <mg-button identifier="identifier-close-button" is-icon="" label="Close message" variant="flat">
            <mg-icon icon="cross"></mg-icon>
          </mg-button>
        </span>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;

exports[`mg-message Should render a warning message with args { identifier: 'identifier', noAriaRole: true } 1`] = `
<mg-message>
  <mock:shadow-root>
    <div class="mg-c-message mg-c-message--warning" id="identifier">
      <mg-card variant="warning" variant-style="bar-left">
        <span class="mg-c-message__icon">
          <mg-icon icon="exclamation-triangle"></mg-icon>
        </span>
        <div class="mg-c-message__content">
          <span class="mg-c-message__content-slot">
            <slot></slot>
          </span>
        </div>
      </mg-card>
    </div>
  </mock:shadow-root>
  <p>
    <strong>
      Strong
    </strong>
    content!
  </p>
</mg-message>
`;
