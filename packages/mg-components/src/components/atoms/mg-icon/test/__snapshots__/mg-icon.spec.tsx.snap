// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mg-icon Should render a spin icon 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-a11y-animation mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--spin" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render address-card icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--address-card mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#address-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-center icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-center mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-center"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-justify icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-justify mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-justify"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-left icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render align-right icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--align-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#align-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render api icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--api mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#api"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render archive-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--archive-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#archive-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-a-z icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-a-z mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-a-z"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-down-right icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-down-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-down-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-left icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-right icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-rotate-backward icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-rotate-backward mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-right-square icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-right-square mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-right-square"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrow-up-z-a icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrow-up-z-a mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrow-up-z-a"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-compare icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-compare mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-compare"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-down icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-right-left icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-right-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-right-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render arrows-rotate-backward icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--arrows-rotate-backward mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#arrows-rotate-backward"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ban icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ban mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ban"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render bell icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--bell mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#bell"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render briefcase-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--briefcase-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#briefcase-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render building-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--building-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#building-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calculator icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calculator mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calculator"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-euro-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-euro-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-euro-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render calendar-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--calendar-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#calendar-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render check-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--check-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#check-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-down-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-down-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-down-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-left-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-left-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-left-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-right-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-right-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-right-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render chevron-up-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--chevron-up-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#chevron-up-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render clock-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--clock-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#clock-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render code-square-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--code-square-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#code-square-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cog icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cog mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render comment-sms icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--comment-sms mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#comment-sms"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render conversation-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--conversation-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#conversation-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render copy icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--copy mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#copy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render credit-card icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--credit-card mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#credit-card"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render cross-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--cross-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#cross-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render dashboard-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--dashboard-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#dashboard-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render download icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--download mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render ellipsis-vertical icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--ellipsis-vertical mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#ellipsis-vertical"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render euro-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--euro-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#euro-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-circle-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-circle-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-circle-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-stamp icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-stamp mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-stamp"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render exclamation-triangle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--exclamation-triangle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#exclamation-triangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render eye-slash icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--eye-slash mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#eye-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-cog icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-cog mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-cog"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-download icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-download mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-download"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-excel-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-excel-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-excel-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-pdf-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-pdf-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-pdf-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-text-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-text-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-text-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-upload icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-upload mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render file-word-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--file-word-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#file-word-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render filter icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--filter mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#filter"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render floppy-disk icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--floppy-disk mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#floppy-disk"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-lines-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-lines-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-lines-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-link icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-link mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render folder-star icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--folder-star mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#folder-star"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render graduation-cap icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--graduation-cap mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#graduation-cap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render hand-up icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--hand-up mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#hand-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render history icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--history mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#history"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render home-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--home-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#home-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render info-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--info-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#info-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render key icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--key mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#key"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render laptop icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--laptop mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#laptop"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render life-ring icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--life-ring mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#life-ring"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lines-rectangle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lines-rectangle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lines-rectangle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render link icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--link mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#link"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render list icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--list mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#list"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render loader icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--loader mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#loader"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render location icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--location mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#location"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render lock icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--lock mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#lock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-in icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-in mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-in"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render log-out icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--log-out mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#log-out"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render magnifying-glass icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--magnifying-glass mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#magnifying-glass"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render mail icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--mail mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#mail"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render notes-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--notes-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#notes-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render paper-plane-slash icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--paper-plane-slash mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#paper-plane-slash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-files-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-files-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-files-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render pen-fancy-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--pen-fancy-outline mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render phone icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--phone mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#phone"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render picture icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--picture mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#picture"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render play-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--play-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#play-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render plus-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--plus-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#plus-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render question-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--question-circle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#question-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render share icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--share mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#share"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render shuffle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--shuffle mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#shuffle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-extra-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-large" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-medium" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-small" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render sitemap icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--sitemap mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#sitemap"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--squares" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--squares" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--squares" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--squares" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render squares icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--squares mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#squares"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--table" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--table" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--table" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--table" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render table icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--table mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#table"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--tag" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--tag" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--tag" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--tag" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tag icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tag mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tag"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--tags" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--tags" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--tags" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--tags" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render tags icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--tags mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#tags"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--thumb-up" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--thumb-up" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--thumb-up" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--thumb-up" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumb-up icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumb-up mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumb-up"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--thumbtack" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--thumbtack" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--thumbtack" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--thumbtack" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--thumbtack-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--thumbtack-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--thumbtack-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--thumbtack-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render thumbtack-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--thumbtack-outline mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#thumbtack-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--trash" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--trash" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--trash" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--trash" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render trash icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--trash mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#trash"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--universal-access" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--universal-access" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--universal-access" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--universal-access" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render universal-access icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--universal-access mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#universal-access"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--unlink" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--unlink" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--unlink" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--unlink" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlink icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlink mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlink"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--unlock" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--unlock" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--unlock" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--unlock" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render unlock icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--unlock mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#unlock"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--upload" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--upload" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--upload" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--upload" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render upload icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--upload mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#upload"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--user" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--user" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--user" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--user" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--user-circle" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--user-circle" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--user-circle" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--user-circle" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-circle icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-circle mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-circle"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--user-group" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--user-group" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--user-group" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--user-group" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-group icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-group mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-group"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--user-pen-fancy-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--user-pen-fancy-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--user-pen-fancy-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--user-pen-fancy-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-pen-fancy-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-pen-fancy-outline mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-pen-fancy-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--user-plus" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--user-plus" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--user-plus" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--user-plus" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-plus icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-plus mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-plus"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--user-question-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--user-question-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--user-question-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--user-question-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-question-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-question-outline mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-question-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--user-shield-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--user-shield-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--user-shield-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--user-shield-outline" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render user-shield-outline icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--user-shield-outline mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#user-shield-outline"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--users" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--users" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--users" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--users" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-app mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-app mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-danger mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-danger mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-info mg-icon--variant-style-full" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-info mg-icon--variant-style-icon" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-style-full mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-style-icon mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-style-full mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-style-icon mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-app mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-danger mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-info mg-icon--variant-style-background" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-style-background mg-icon--variant-success" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render users icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--users mg-icon--variant-style-background mg-icon--variant-warning" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#users"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon in extra-large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-extra-large mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon in large size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-large mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon in medium size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-medium mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon in regular size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon in small size 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-small mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'app', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'app', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-full mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'app', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-icon mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'danger', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'danger', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-full mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'danger', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-icon mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'info', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'info', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-full mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'info', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-icon mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'success', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'success', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-success mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'success', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-success mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'warning', variantStyle: 'background' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'warning', variantStyle: 'full' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-style-full mg-icon--variant-warning mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using { variant: 'warning', variantStyle: 'icon' } variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-style-icon mg-icon--variant-warning mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using app variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-app mg-icon--variant-style-background mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using danger variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-danger mg-icon--variant-style-background mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using info variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-info mg-icon--variant-style-background mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using success variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-success mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;

exports[`mg-icon Should render wallet icon using warning variant 1`] = `
<mg-icon>
  <mock:shadow-root>
    <svg aria-hidden="true" class="mg-icon mg-icon--size-regular mg-icon--variant-style-background mg-icon--variant-warning mg-icon--wallet" focusable="false" viewBox="0 0 16 16">
      <use xlink:href="#wallet"></use>
    </svg>
  </mock:shadow-root>
</mg-icon>
`;
