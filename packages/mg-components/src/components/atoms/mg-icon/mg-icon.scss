@import '../../../styles/a11y.scss';

:host {
  display: inline-flex;
  vertical-align: middle;
}

$sizes: ('small', 'regular', 'medium', 'large', 'extra-large');
$colors: ('success', 'warning', 'danger', 'info', 'app');

@function getColorPrefix($color) {
  @if $color == 'app' {
    @return 'mg-color';
  }
  @return 'color';
}

@mixin variant-size($size) {
  &[size='#{$size}'],
  &.mg-icon--size-#{$size} {
    width: var(--mg-icon-#{$size}-size);
    height: var(--mg-icon-#{$size}-size);
    &[class*='mg-icon--variant-'] {
      padding: calc(var(--mg-icon-#{$size}-size) / 2);
    }
  }
}

@mixin variant-background($color) {
  &.mg-icon--variant-#{$color} {
    background-color: hsl(var(--#{getColorPrefix($color)}-#{$color}-h) var(--#{getColorPrefix($color)}-#{$color}-s) 90%);
  }
}

@mixin variant-icon($color) {
  &.mg-icon--icon-variant-#{$color} {
    color: hsl(var(--#{getColorPrefix($color)}-#{$color}-h) var(--#{getColorPrefix($color)}-#{$color}-s) var(--#{getColorPrefix($color)}-#{$color}-l));
  }
}

.mg-icon {
  color: currentColor;
  @each $size in $sizes {
    @include variant-size($size);
  }

  @each $color in $colors {
    @include variant-background($color);
  }

  @each $color in $colors {
    @include variant-icon($color);
  }

  &[class*='mg-icon--variant-'] {
    border-radius: 50%;
  }
}

/**
* Loader icon
**/

.loader__full-circle {
  opacity: 0.2;
}

/**
* Animations
**/

.mg-icon--spin {
  animation-name: rotate;
  animation-duration: 0.75s;
  animation-iteration-count: infinite;
}

@keyframes rotate {
  to {
    transform: rotate(360deg);
  }
}
