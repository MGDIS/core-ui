@import '../../../styles/mixins/reset-mg-card-slotted-variables.scss';

@function getColorPrefix($color) {
  @if $color == 'app' {
    @return 'mg-color';
  }
  @return 'color';
}

@mixin card-variants($variants...) {
  @each $variant in $variants {
    &.mg-card--#{$variant} {
      overflow: hidden;
      &.mg-card--bar-left .mg-card__bar {
        background-color: hsl(var(--#{getColorPrefix($variant)}-#{$variant}-h), var(--#{getColorPrefix($variant)}-#{$variant}-s), var(--#{getColorPrefix($variant)}-#{$variant}-l));
      }
      &.mg-card--fill {
        background-color: hsl(var(--#{getColorPrefix($variant)}-#{$variant}-h), var(--#{getColorPrefix($variant)}-#{$variant}-s), var(--mg-color-soft-l));
      }
    }
  }
}

.mg-card {
  // Display
  position: relative;
  width: 100%;
  padding: var(--mg-card-padding, var(--mg-card-padding-default));
  overflow: var(--mg-card-overflow, var(--mg-card-overflow-default));
  box-sizing: border-box;
  z-index: inherit;
  // Decoration
  background: var(--mg-card-background, var(--mg-card-background-default));
  border: var(--mg-card-border, var(--mg-card-border-default));
  border-radius: var(--mg-card-border-radius, var(--mg-card-border-radius-default));
  box-shadow: var(--mg-card-box-shadow, var(--mg-card-box-shadow-default));

  @include reset-slot-card-variables();
  @include card-variants('info', 'warning', 'success', 'danger', 'app');

  &__bar {
    position: absolute;
    top: 0;
    left: 0;
    width: 0.3rem;
    height: 100%;
  }
}
