class x{classes;constructor(s=[]){this.classes=s}add=s=>{this.has(s)||this.classes.push(s)};delete=s=>{const e=this.classes.indexOf(s);e>-1&&this.classes.splice(e,1)};has=s=>this.classes.includes(s);join=()=>this.classes.join(" ")}const o=t=>typeof t=="object"&&!Array.isArray(t)&&t!==null,y=(t,s,e)=>{if(!o(t)||typeof s!="string")return e;const[r,...n]=s.split(".");return n.length?y(t[r],n.join("."),e):t[r]??e},u=t=>Array.isArray(t)&&t.every(s=>typeof s=="string"),d=t=>typeof t=="string"&&t.trim()!=="",I=t=>typeof t=="object"?JSON.stringify(t):String(t),S=t=>typeof t=="string"?t.toLocaleLowerCase().normalize("NFD").replaceAll(/[\u0300-\u036f]/g,""):t,p=t=>t.replace(/[A-Z]+(?![a-z])|[A-Z]/g,(s,e)=>(e>0?"-":"")+s.toLowerCase()).replace(/[^a-z0-9-]+/g,"-").replace(/--+/g,"-").replace(/(?:^-)|(?:-$)/g,""),b=(t="",s=10)=>{const e=new Uint8Array(s);crypto.getRandomValues(e);const i=Array.from(e).map(r=>r.toString(16).padStart(2,"0")).join("").slice(0,s);return t!==""?`${t}-${i}`:i},A=t=>d(t)&&/^([a-z][a-z0-9]*)(-[a-z0-9]+)*$/.exec(t)!==null,N=t=>{let s;return typeof t=="string"?s=t:t&&typeof t=="object"&&(o(t)||Array.isArray(t))?s=JSON.stringify(t):t!=null&&typeof t!="boolean"&&typeof t!="object"&&(s=String(t)),s&&p(s)},O=async t=>{if(t)return t()},P={FIRST:"first",NEXT:"next",PREVIOUS:"previous",LAST:"last"},f=10;class m{items=[];total;top=f;next;baseIndex=1;constructor(s){if(o(s))Array.isArray(s.items)&&(this.items=s.items),typeof s.top=="number"&&(this.top=s.top),this.total=typeof s.total=="number"?s.total:this.items.length,this.next=s.next;else throw new Error("Page - init must match IPage type.")}getIndexFromCursor=(s="first",e)=>{if(!Array.isArray(this.items)||!this.items.length)return null;const r=this.items.length-this.baseIndex;let n,a=0;if(["previous","next"].includes(s)&&e){const c=this.items.findIndex(g=>JSON.stringify(g)===JSON.stringify(e));if(c===-1)return 0;a=c}return s==="first"?n=0:s==="last"?n=r:s==="previous"?n=JSON.stringify(this.items[a])===JSON.stringify(this.items[0])?r:a-this.baseIndex:s==="next"?n=JSON.stringify(this.items[a])===JSON.stringify(this.items[r])?0:a+this.baseIndex:n=0,n}}class C{items=[];#t=f;#s;#e;constructor(s,e){Array.isArray(s)&&(this.items=s),e&&(["string","function"].includes(typeof e.next)||o(e.next)&&URL.canParse(e.next))&&(this.#s=e.next),typeof e?.top=="number"&&(this.#t=e.top),typeof e?.total=="number"&&(this.#e=e.total)}getPage=(s=0,e)=>{const i=typeof e=="function"?this.items.filter(e):this.items;let r;return this.#s?r=this.#s:i.length>s+this.#t&&(r=()=>this.getPage(s+this.#t,e)),new m({items:i.slice(s,s+this.#t),total:this.#e,top:this.#t,next:r})}}const T=/^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])$/,J=t=>t.toISOString().split("T")[0],L=(t,s)=>s.includes(t?.tagName.toLowerCase()),j='a[href], button, input, textarea, select, details, [tabindex]:not([tabindex="-1"]), [identifier], mg-button',z=t=>typeof t=="number"&&!Number.isNaN(t),D=t=>{const s=h(t),e=l(t);return[t,...s,...e]},h=(t,s=[])=>{if(t.self!==t.top)try{const e=t.parent;return e?(s.push(e),h(e,s)):s}catch(e){return console.error("Different hosts between iframes:",e),s}return s},l=(t,s=[])=>{if(t.frames.length>0)for(const e of Array.from(t.frames))s.push(e),l(e,s);return s};export{x as C,C as P,P as a,u as b,o as c,m as d,z as e,N as f,y as g,b as h,d as i,A as j,L as k,S as l,T as m,O as n,J as o,D as p,j as q,I as t};
