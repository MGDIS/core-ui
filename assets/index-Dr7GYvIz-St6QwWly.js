var A=Object.defineProperty;var u=t=>{throw TypeError(t)};var N=(t,s,e)=>s in t?A(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var r=(t,s,e)=>N(t,typeof s!="symbol"?s+"":s,e),x=(t,s,e)=>s.has(t)||u("Cannot "+e);var o=(t,s,e)=>(x(t,s,"read from private field"),e?e.call(t):s.get(t)),g=(t,s,e)=>s.has(t)?u("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(t):s.set(t,e),y=(t,s,e,n)=>(x(t,s,"write to private field"),n?n.call(t,e):s.set(t,e),e);class L{constructor(s=[]){r(this,"classes");r(this,"add",s=>{this.has(s)||this.classes.push(s)});r(this,"delete",s=>{const e=this.classes.indexOf(s);e>-1&&this.classes.splice(e,1)});r(this,"has",s=>this.classes.includes(s));r(this,"join",()=>this.classes.join(" "));this.classes=s}}const d=t=>typeof t=="object"&&!Array.isArray(t)&&t!==null,O=(t,s,e)=>{const n=".";if(!d(t)||typeof s!="string")return e;const[i,...a]=s.split(n);return a.length?O(t[i],a.join(n)):t[i]},j=t=>Array.isArray(t)&&t.every(s=>typeof s=="string"),P=t=>typeof t=="string"&&t.trim()!=="",z=t=>typeof t=="object"?JSON.stringify(t):String(t),D=t=>typeof t=="string"?t.toLocaleLowerCase().normalize("NFD").replaceAll(/[\u0300-\u036f]/g,""):t,C=t=>t.replace(/[A-Z]+(?![a-z])|[A-Z]/g,(s,e)=>(e>0?"-":"")+s.toLowerCase()).replace(/[^a-z0-9-]+/g,"-").replace(/--+/g,"-").replace(/(?:^-)|(?:-$)/g,""),E=(t="",s=10)=>{const e=new Uint8Array(s);crypto.getRandomValues(e);const n=Array.from(e).map(i=>i.toString(16).padStart(2,"0")).join("").slice(0,s);return t!==""?`${t}-${n}`:n},F=t=>P(t)&&/^([a-z][a-z0-9]*)(-[a-z0-9]+)*$/.exec(t)!==null,R=t=>{let s;return typeof t=="string"?s=t:t&&typeof t=="object"&&(d(t)||Array.isArray(t))?s=JSON.stringify(t):t!=null&&typeof t!="boolean"&&typeof t!="object"&&(s=String(t)),s&&C(s)},V=async t=>{if(t)return t()},$={FIRST:"first",NEXT:"next",PREVIOUS:"previous",LAST:"last"},p=10;class T{constructor(s){r(this,"items",[]);r(this,"total");r(this,"top",p);r(this,"next");r(this,"baseIndex",1);r(this,"getIndexFromCursor",(s="first",e)=>{if(!Array.isArray(this.items)||!this.items.length)return null;const i=this.items.length-this.baseIndex;let a,h=0;if(["previous","next"].includes(s)&&e){const m=this.items.findIndex(b=>JSON.stringify(b)===JSON.stringify(e));if(m===-1)return 0;h=m}return s==="first"?a=0:s==="last"?a=i:s==="previous"?a=JSON.stringify(this.items[h])===JSON.stringify(this.items[0])?i:h-this.baseIndex:s==="next"?a=JSON.stringify(this.items[h])===JSON.stringify(this.items[i])?0:h+this.baseIndex:a=0,a});if(d(s))Array.isArray(s.items)&&(this.items=s.items),typeof s.top=="number"&&(this.top=s.top),this.total=typeof s.total=="number"?s.total:this.items.length,this.next=s.next;else throw new Error("Page - init must match IPage type.")}}var c,f,l;class U{constructor(s,e){r(this,"items",[]);g(this,c,p);g(this,f);g(this,l);r(this,"getPage",(s=0,e)=>{const n=typeof e=="function"?this.items.filter(e):this.items;let i;return o(this,f)?i=o(this,f):n.length>s+o(this,c)&&(i=()=>this.getPage(s+o(this,c),e)),new T({items:n.slice(s,s+o(this,c)),total:o(this,l),top:o(this,c),next:i})});Array.isArray(s)&&(this.items=s),e&&(["string","function"].includes(typeof e.next)||d(e.next)&&URL.canParse(e.next))&&y(this,f,e.next),typeof(e==null?void 0:e.top)=="number"&&y(this,c,e.top),typeof(e==null?void 0:e.total)=="number"&&y(this,l,e.total)}}c=new WeakMap,f=new WeakMap,l=new WeakMap;const B=/^\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01])$/,K=t=>t.toISOString().split("T")[0],W=(t,s)=>s.includes(t==null?void 0:t.tagName.toLowerCase()),Z='a[href], button, input, textarea, select, details, [tabindex]:not([tabindex="-1"]), [identifier], mg-button',k=t=>typeof t=="number"&&!Number.isNaN(t),q=t=>{const s=I(t),e=S(t);return[t,...s,...e]},I=(t,s=[])=>{if(t.self!==t.top)try{const e=t.parent;return e?(s.push(e),I(e,s)):s}catch(e){return console.error("Different hosts between iframes:",e),s}return s},S=(t,s=[])=>{if(t.frames.length>0)for(const e of Array.from(t.frames))s.push(e),S(e,s);return s};export{L as C,U as P,$ as a,j as b,P as c,T as d,k as e,R as f,O as g,E as h,d as i,F as j,W as k,D as l,B as m,V as n,K as o,q as p,Z as q,z as t};
