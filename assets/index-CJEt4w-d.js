const p=t=>(t=typeof t,t==="object"||t==="function"),h=(t,l,...$)=>{let e=null,a=null,u=null,c=!1,y=!1;const n=[],m=s=>{for(let i=0;i<s.length;i++)e=s[i],Array.isArray(e)?m(e):e!=null&&typeof e!="boolean"&&((c=typeof t!="function"&&!p(e))&&(e=String(e)),c&&y?n[n.length-1].$text$+=e:n.push(c?f(null,e):e),y=c)};if(m($),l){l.key&&(a=l.key),l.name&&(u=l.name);{const s=l.className||l.class;s&&(l.class=typeof s!="object"?s:Object.keys(s).filter(i=>s[i]).join(" "))}}if(typeof t=="function")return t(l===null?{}:l,n,k);const r=f(t,null);return r.$attrs$=l,n.length>0&&(r.$children$=n),r.$key$=a,r.$name$=u,r},f=(t,l)=>{const $={$flags$:0,$tag$:t,$text$:l,$elm$:null,$children$:null};return $.$attrs$=null,$.$key$=null,$.$name$=null,$},k={forEach:(t,l)=>t.map(v).forEach(l),map:(t,l)=>t.map(v).map(l).map(g)},v=t=>({vattrs:t.$attrs$,vchildren:t.$children$,vkey:t.$key$,vname:t.$name$,vtag:t.$tag$,vtext:t.$text$}),g=t=>{if(typeof t.vtag=="function"){const $=Object.assign({},t.vattrs);return t.vkey&&($.key=t.vkey),t.vname&&($.name=t.vname),h(t.vtag,$,...t.vchildren||[])}const l=f(t.vtag,t.vtext);return l.$attrs$=t.vattrs,l.$children$=t.vchildren,l.$key$=t.vkey,l.$name$=t.vname,l};export{h};
